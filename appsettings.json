{
  "Serilog": {
    "Using": ["Serilog.Sinks.Console", "Serilog.Sinks.File"],
    "MinimumLevel": "Information",
    "WriteTo": [
      { "Name": "Console" },
      {
        "Name": "File",
        "Args": {
          "path": "./logs/network_pinger_log.txt",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": ["FromLogContext"],
    "Properties": {
      "Application": "NetworkPingerService"
    }
  },
  "EmailSettings": {
    // SMTP server hostname (e.g., smtp.gmail.com, smtp.office365.com)
    "SmtpHost": "your.smtp.host.com",
    // SMTP server port (e.g., 587 for TLS/STARTTLS, 465 for SSL)
    "SmtpPort": 587,
    // Optional: SMTP Username. If not provided, the system will look for the NETWORKPINGER_SMTP_USERNAME environment variable.
    "SmtpUsername": "", 
    // Optional: SMTP Password. If not provided, the system will look for the NETWORKPINGER_SMTP_PASSWORD environment variable.
    "SmtpPassword": "",
    "FromAddress": "sender@example.com",
    // The email address to which notifications will be sent
    "ToAddress": "recipient@example.com",
    // Delay in minutes before sending the first notification for an outage, and between subsequent notifications for ongoing outages.
    "NotificationDelayMinutes": 10,
    // Maximum number of times to retry sending an email if it fails. After this, retries stop until a new failure event.
    "MaxEmailRetries": 5,
    // Set to true to enable verbose logging for email services (e.g., scheduling, cancellation). Set to false for production.
    "EmailLoggingEnabled": false,
    // Set to true to enable email notifications. If false, email sending will be skipped.
    "EmailNotificationsEnabled": false
  },
  "PingSettings": {
    "PingIntervalMilliseconds": 2000,
    "PingTimeoutMilliseconds": 1000,
    "Targets": [
      {
        "Name": "Gateway",
        "Address": "192.168.11.1"
      },
      {
        "Name": "Main DNS",
        "Address": "8.8.8.8"
      },
      {
        "Name": "Backup DNS",
        "Address": "8.8.4.4"
      }
    ]
  }
}